<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" lang="fr" xml:lang="fr">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Load Runner </title>
	<link rel="stylesheet" type="text/css" href="StyleLoadRunner.css" />
	<!-- Code JavaScript local -->
	<script type="text/javascript">
		let objCanvas = null;
		let objC2D = null;
		let objCycleAnimation = null;
		let objImageFond = null;
		let objImageScore = null;
		let tabObjMurs = null;
		let objImageMurs = null;
		let objMotif = null;
		let imagePlateforme = new Image();
		let imageEchelle = new Image();
		let imageCorde = new Image();
		let imageBalle1 = new Image();
		let imageBalle2 = new Image();
		let imageBalle3 = new Image();
		let imageBalle4 = new Image();
		let imageBalle5 = new Image();
		let imageBalle6 = new Image();
		let imageBalle7 = new Image();
		let imagePersonnage = new Image();
		let objPlateformes = null;
		let objPersonnages = null;

		function initAnimation() {
			objCanvas = document.getElementById('monCanvas');
			objC2D = objCanvas.getContext('2d');
			initImageFond();
			initMurs();
			initImageScore();
			initPlateformesJeu();
			initPersonnage();
			dessiner(); // Dessiner une première fois
			animer();
		}
		// Aller chercher l'image de fond
		function initImageFond() {
			objImageFond = new Image();
			objImageFond.src = 'backroundLoadRunner.png';
		}
		function initImageScore() {
			objImageScore = new Image();
			objImageScore.src = 'dbzNoir.jpg';
		}

		function initPersonnage() {
			imagePersonnage.src = 'GokuDeplacementH.png'
			objPersonnages = new Object();
			objPersonnages.DeplacementHorizontalX = 1;
			objPersonnages.DeplacementHorizontalY = 1;
			objPersonnages.binDroite = false;
			objPersonnages.binGauche = false;
		}
		function initPlateformesJeu() {
			objPlateformes = new Object();
			imagePlateforme.src = 'sol2Decoupe.png';
			imageEchelle.src = 'echelleDecoupe.png';
			imageCorde.src = 'rope.png';
			imageBalle1.src = 'balle1.png';
			imageBalle2.src = 'balle2(1).png';
			imageBalle3.src = 'balle3(1).png';
			imageBalle4.src = 'balle4.png';
			imageBalle5.src = 'balle5.png';
			imageBalle6.src = 'balle6.png';
			imageBalle7.src = 'balle7.png';

			objPlateformes.binDessiner = false;
			objPlateformes.tabPlateformes = [


				[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1],
				[0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 2, 0, 0],
				[1, 1, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1],
				[0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[6, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
				[0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 10, 0, 0, 0],
				[0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
				[0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
				[0, 0, 0, 44,2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
				[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];


		}
		//Contruire les murs
		function initMurs() {
			tabObjMurs = new Array();
			let objMur = null;

			objImageMurs = new Image();
			objImageMurs.src = 'dbzMursNoir.jpg';

			// Le mur de gauche (#0)
			objMur = new Object();
			//objMur.objImage = objImageMur;
			objMur.intXDebut = 0;
			objMur.intYDebut = 0;
			objMur.intXFin = Math.floor(objCanvas.width / 30);
			objMur.intYFin = objCanvas.height;
			objMur.strCouleur = 'red';
			tabObjMurs.push(objMur);

			// Le mur du centre (en haut) (#1)
            objMur = new Object();
            //objMur.objImage = objImageMur;
            objMur.intXDebut = 0;
            objMur.intYDebut = 0;
            objMur.intXFin = objCanvas.width;
            objMur.intYFin = Math.floor(objCanvas.width / 30);
           // objMur.strCouleur = 'midnightblue';
            tabObjMurs.push(objMur);

			 // Le mur de droite (#2)
			 objMur = new Object();
            // objMur.objImage = objImageMur;
            objMur.intXDebut = objCanvas.width;
            objMur.intYDebut = 0;
            objMur.intXFin = objCanvas.width - Math.floor(objCanvas.width / 30);
            objMur.intYFin = objCanvas.height;
          //  objMur.strCouleur = 'midnightblue';
            tabObjMurs.push(objMur);

		}


		// Un cycle d'animation	
		function animer() {
			// Requête pour le prochain cycle
			objCycleAnimation = requestAnimationFrame(animer);

			// Le cycle d'animation
			effacerDessin();
			mettreAjourAnimation();
			dessiner();
		}

		// Arrêter l'animation
		function arreterAnimation() {
			if (objCycleAnimation != null)
				cancelAnimationFrame(objCycleAnimation);
			objCycleAnimation = null;
		}

		// Pour effacer le dessin
		function effacerDessin() {
			objC2D.clearRect(0, 0, objCanvas.width, objCanvas.height);
		}

		// Pour mettre à jour l'animation
		function mettreAjourAnimation() {
		}

		// Pour dessiner
		function dessiner() {
			dessinerFond();
			dessinerMurs();
			dessinerScore();
			dessinerPlateformesJeu();
			dessinerPersonnages();
		}
		// Pour dessiner l'image de fond
		function dessinerFond() {
			objC2D.save();  // Sauvegarde le contexte
			objC2D.drawImage(objImageFond, 0, 0, objCanvas.width, objCanvas.height - 130);
			objC2D.restore(); // Restaure le contexte
		}
		function dessinerScore() {
			objC2D.save();  // Sauvegarde le contexte

			//Image drangon ball z
			objC2D.drawImage(objImageScore, 0, 570, objCanvas.width, 100);




			//Score
			objC2D.beginPath();
			strTexteScore = "Score: " + "00000";
			objC2D.textAlign = "center";
			objC2D.textBaseLine = "bottom";
			objC2D.font = '25pt fantasy';
			//Temps
			objC2D.beginPath();
			strTextTemps = "Temps: " + "00:00";
			objC2D.textAlign = "center";
			objC2D.textBaseLine = "bottom";
			objC2D.font = '25pt fantasy';

			//Niveau
			objC2D.beginPath();
			strTexteNiveau = "Niveau: " + "1";
			objC2D.textAlign = "center";
			objC2D.textBaseLine = "bottom";
			objC2D.font = '25pt fantasy';

			//Vies
			objC2D.beginPath();
			strTextVies = "Vies: " + "5";
			objC2D.textAlign = "center";
			objC2D.textBaseLine = "bottom";
			objC2D.font = '25pt fantasy';

			//Titre
			objC2D.beginPath();
			strTextTitre = "Load Runner";
			objC2D.textAlign = "center";
			objC2D.textBaseLine = "bottom";
			objC2D.font = '25pt fantasy';


			objC2D.fillStyle = 'white';
			
			objC2D.fillText(strTextTitre, objCanvas.width/2,30);


			objC2D.fillText(strTexteScore, 150, 610);

			objC2D.fillText(strTextTemps, 150, 650);


			objC2D.fillText(strTexteNiveau, 810, 610);

			objC2D.fillText(strTextVies, 810, 650);

		






			objC2D.restore(); // Restaure le contexte
		}

		function dessinerPersonnages() { //drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)
			objC2D.save();
			objC2D.translate(30,30);
			
		
			for (let i = 0; i < objPlateformes.tabPlateformes.length; i++) {

				for (let j = 0; j < objPlateformes.tabPlateformes[i].length; j++) {
					if (objPlateformes.tabPlateformes[i][j] == 44) {
						objPersonnages.PositionX = j;
						objPersonnages.PositionY = i;
						objPersonnages.PositionXPixel = j * 15;
						objPersonnages.PositionYPixel = i * 30;

						objC2D.drawImage(imagePersonnage, objPersonnages.DeplacementHorizontalX, objPersonnages.DeplacementHorizontalY, 23, 30, j * 15, i * 30, 30, 30);
						//	console.log(j);
					}

				}
			}
			objC2D.restore();
		}
		function dessinerMurs(){
			objC2D.save();

			objMotif = objC2D.createPattern(objImageMurs, 'repeat');

			for (let intNoMur = 0; intNoMur < tabObjMurs.length; intNoMur++) {
                let objMur = tabObjMurs[intNoMur];


				objC2D.fillStyle = objMotif;
				objC2D.beginPath();
                objC2D.moveTo(objMur.intXDebut, objMur.intYDebut);
                objC2D.lineTo(objMur.intXFin, objMur.intYDebut);
                objC2D.lineTo(objMur.intXFin, objMur.intYFin);
                objC2D.lineTo(objMur.intXDebut, objMur.intYFin);
                objC2D.closePath();
                objC2D.fill();

			}


			objC2D.restore();
		}

		function dessinerPlateformesJeu() {
			objC2D.save();
			objC2D.translate(30,30);

			for (var i = 0; i < objPlateformes.tabPlateformes.length; i++) {

				for (var j = 0; j < objPlateformes.tabPlateformes[i].length; j++) {
					if (objPlateformes.tabPlateformes[i][j] == 1) {
						objC2D.drawImage(imagePlateforme, j * 30, i * 30);
						//	alert()
					}
					if (objPlateformes.tabPlateformes[i][j] == 2) {
						objC2D.drawImage(imageEchelle, j * 30, i * 30);
					}
					if (objPlateformes.tabPlateformes[i][j] == 3) {
						objC2D.drawImage(imageCorde, j * 30, i * 30 + 5);
					}
					switch (objPlateformes.tabPlateformes[i][j]) {
						case 4: objC2D.drawImage(imageBalle1, j * 30, i * 30); break;
						case 5: objC2D.drawImage(imageBalle2, j * 30, i * 30); break;
						case 6: objC2D.drawImage(imageBalle3, j * 30, i * 30); break;
						case 7: objC2D.drawImage(imageBalle4, j * 30, i * 30); break;
						case 8: objC2D.drawImage(imageBalle5, j * 30, i * 30 + 4); break;
						case 9: objC2D.drawImage(imageBalle6, j * 30, i * 30 + 4); break;
						case 10: objC2D.drawImage(imageBalle7, j * 30, i * 30 + 4); break;
					}


				}

			}
			objC2D.restore();
		}

		function deplacerPersonnages() {

			objC2D.save();
			objC2D.translate(30,30);
			switch (event.keyCode) {
				case 39:// Flèche-à-droite
					if (objPersonnages.binGauche) {
						objPersonnages.DeplacementHorizontalX = 459.8;
						objPersonnages.binGauche = false;
					}
					//on va augmenter les x pour aller a la prochaine image
					objPersonnages.DeplacementHorizontalX += 24.2;
					objPersonnages.binDroite = true;
					//on va voir si on a atteint la fin du sprite pour recommencer afin  de faire lanimation lorsquil va
					if (objPersonnages.DeplacementHorizontalX >= 240) {
						objPersonnages.DeplacementHorizontalX = 144.2;
					}
					console.log(objPersonnages.PositionXPixel);
					
					if (objPersonnages.PositionXPixel < objCanvas.width-90) {
						//lespace avant devient vide
						objPlateformes.tabPlateformes[objPersonnages.PositionYPixel / 30][objPersonnages.PositionXPixel / 15] = 0;

						objPersonnages.PositionXPixel = (objPersonnages.PositionXPixel / 15) + 1;

						//lespace apres devient la prochaine image
						objPlateformes.tabPlateformes[(objPersonnages.PositionYPixel / 30)][objPersonnages.PositionXPixel] = 44;
					}




					break;
				case 37:// Flèche-à-gauche
					objPersonnages.binGauche = true;
					//	console.log("A gauche");
					if (objPersonnages.binDroite) {
						objPersonnages.DeplacementHorizontalX = 459.8;
						objPersonnages.binDroite = false;
					}

					objPersonnages.DeplacementHorizontalX -= 24.2;
					//	console.log(objPersonnages.DeplacementHorizontalX);
					//on va voir si on a atteint la fin du sprite pour recommencer afin  de faire lanimation lorsquil va
					if (objPersonnages.DeplacementHorizontalX <= 264) {

						objPersonnages.DeplacementHorizontalX = 340;
					}

					//lespace avant devient vide

					if (objPersonnages.PositionXPixel > 0) {

					objPlateformes.tabPlateformes[objPersonnages.PositionYPixel / 30][objPersonnages.PositionXPixel / 15] = 0;
					//on augmente la position des y pour avancer dans le tableau

					objPersonnages.PositionXPixel = (objPersonnages.PositionXPixel / 15) - 1;



					//lespace apres devient la prochaine image
					objPlateformes.tabPlateformes[(objPersonnages.PositionYPixel / 30)][objPersonnages.PositionXPixel] = 44;

					}
					break;
				case 38:// Flèche-en-haut
					console.log("En haut");
					break;
				case 40: // Flèche-en-bas
					console.log("En bas");
					break;
			}
			objC2D.restore();
		}
	</script>
</head>

<body onload="initAnimation()">
	<canvas id="monCanvas" width="960" height="670" tabindex="1" onkeydown="deplacerPersonnages()">
		Votre navigateur ne supporte pas la balise canvas
	</canvas>
</body>

</html>